{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["EditorBox","props","className","value","code","onValueChange","setCode","highlight","languages","markdown","split","map","line","join","padding","style","fontFamily","fontSize","ResultBox","plugins","gfm","defaultValue","App","useState","sizes","direction","cursor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAYA,SAASA,EAAUC,GACjB,OACE,qBAAKC,UAAU,gBAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,cAAC,IAAD,CACIC,MAAOF,EAAMG,KACbC,cAAe,SAAAD,GAAI,OAAIH,EAAMK,QAAQF,IACrCG,UAAW,SAAAH,GAAI,OAAIG,oBAAUH,EAAMI,YAAUC,UAC1CC,MAAM,MACNC,KACC,SAAAC,GAAI,2DAC4CA,EAD5C,cAGLC,KAAK,OACRC,QAAS,GACTC,MAAO,CACLC,WAAY,2BACZC,SAAU,IAGdf,UAAU,yBAMpB,SAASgB,EAAUjB,GACjB,OACE,qBAAKC,UAAU,gBAAf,SACE,cAAC,IAAD,CAAeA,UAAU,wBAAwBiB,QAAS,CAACC,KAA3D,SACGnB,EAAMG,SAuBf,IAAMiB,EAAY,qmCA4CHC,EA7Df,WAAgB,IAAD,EACWC,mBAASF,GADpB,mBACNjB,EADM,KACAE,EADA,KAGb,OACE,qBAAKJ,UAAU,MAAf,SACE,qBAAKA,UAAU,UAAf,SACE,eAAC,IAAD,CACAsB,MAAO,CAAC,GAAI,IACZC,UAAU,aACVC,OAAO,aAHP,UAIE,cAAC1B,EAAD,CAAWI,KAAMA,EAAME,QAASA,EAASJ,UAAU,kBACnD,cAACgB,EAAD,CAAWd,KAAMA,EAAMF,UAAU,0BC/C5ByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6d16deb2.chunk.js","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\nimport Editor from 'react-simple-code-editor';\nimport { highlight, languages } from 'prismjs';\nimport Split from 'react-split';\n\nimport './App.css';\nimport \"prismjs/themes/prism.css\"; \nimport 'prismjs/components/prism-markdown';\n\n\nfunction EditorBox(props) {\n  return (\n    <div className=\"resizable-box\">\n      <div className=\"container-editor-area\">\n        <Editor\n            value={props.code}\n            onValueChange={code => props.setCode(code)}\n            highlight={code => highlight(code, languages.markdown)\n              .split('\\n')\n              .map(\n                line =>\n                  `<span class=\"container-editor-line-number\">${line}</span>`\n              )\n              .join('\\n')}\n            padding={10}\n            style={{\n              fontFamily: '\"Roboto Mono\", monospace',\n              fontSize: 12,\n            }\n          }\n          className=\"container-editor\"\n        />\n      </div>\n    </div>);\n}\n\nfunction ResultBox(props) {\n  return (\n    <div className=\"resizable-box\">\n      <ReactMarkdown className=\"markdown-rendered-box\" plugins={[gfm]}>\n        {props.code}\n      </ReactMarkdown>\n    </div>\n  );\n}\n\nfunction App() {\n  const [code, setCode] = useState(defaultValue)\n\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <Split\n        sizes={[50, 50]}\n        direction=\"horizontal\"\n        cursor=\"col-resize\">\n          <EditorBox code={code} setCode={setCode} className=\"resizable-box\"/>\n          <ResultBox code={code} className=\"resizable-box\"/>\n        </Split>\n      </div>\n    </div>\n  );\n}\nconst defaultValue = `# Welcome to my React Markdown Previewer!\n\n## This is a sub-heading...\n### And here's some other cool stuff:\n\nHeres some code, \\`<div></div>\\`, between 2 backticks.\n\n\\`\\`\\`\n// this is multi-line code:\n\nfunction anotherExample(firstLine, lastLine) {\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n    return multiLineCode;\n  }\n}\n\\`\\`\\`\n\nYou can also make text **bold**... whoa!\nOr _italic_.\nOr... wait for it... **_both!_**\nAnd feel free to go crazy ~~crossing stuff out~~.\n\nThere's also [links](https://www.freecodecamp.com), and\n> Block Quotes!\n\nAnd if you want to get really crazy, even tables:\n\nWild Header | Crazy Header | Another Header?\n------------ | ------------- | -------------\nYour content can | be here, and it | can be here....\nAnd here. | Okay. | I think we get it.\n\n- And of course there are lists.\n  - Some are bulleted.\n     - With different indentation levels.\n        - That look like this.\n\n\n1. And there are numbererd lists too.\n1. Use just 1s if you want!\n1. And last but not least, let's not forget embedded images:\n\n![React Logo w/ Text](https://goo.gl/Umyytc)\n`\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}